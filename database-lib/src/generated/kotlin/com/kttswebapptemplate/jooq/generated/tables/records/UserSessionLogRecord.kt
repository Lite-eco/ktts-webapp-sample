/*
 * This file is generated by jOOQ.
 */
package com.kttswebapptemplate.jooq.generated.tables.records

import com.kttswebapptemplate.jooq.generated.tables.UserSessionLogTable
import java.time.Instant
import java.util.UUID
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

/** This class is generated by jOOQ. */
@Suppress("UNCHECKED_CAST")
open class UserSessionLogRecord private constructor() :
    UpdatableRecordImpl<UserSessionLogRecord>(UserSessionLogTable.USER_SESSION_LOG) {

    open var id: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open var springSessionId: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var userId: UUID
        set(value): Unit = set(2, value)
        get(): UUID = get(2) as UUID

    open var deploymentLogId: UUID
        set(value): Unit = set(3, value)
        get(): UUID = get(3) as UUID

    open var creationDate: Instant
        set(value): Unit = set(4, value)
        get(): Instant = get(4) as Instant

    open var ip: String
        set(value): Unit = set(5, value)
        get(): String = get(5) as String

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /** Create a detached, initialised UserSessionLogRecord */
    constructor(
        id: UUID,
        springSessionId: String,
        userId: UUID,
        deploymentLogId: UUID,
        creationDate: Instant,
        ip: String
    ) : this() {
        this.id = id
        this.springSessionId = springSessionId
        this.userId = userId
        this.deploymentLogId = deploymentLogId
        this.creationDate = creationDate
        this.ip = ip
        resetChangedOnNotNull()
    }
}
