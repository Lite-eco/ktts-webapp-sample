/*
 * This file is generated by jOOQ.
 */
package com.kttswebapptemplate.jooq.generated.tables.records

import com.kttswebapptemplate.jooq.generated.tables.UserFileTable
import java.time.Instant
import java.util.UUID
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

/** This class is generated by jOOQ. */
@Suppress("UNCHECKED_CAST")
open class UserFileRecord private constructor() :
    UpdatableRecordImpl<UserFileRecord>(UserFileTable.USER_FILE) {

    open var id: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open var userId: UUID
        set(value): Unit = set(1, value)
        get(): UUID = get(1) as UUID

    open var fileContent: ByteArray
        set(value): Unit = set(2, value)
        get(): ByteArray = get(2) as ByteArray

    open var contentType: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open var originalFilename: String
        set(value): Unit = set(4, value)
        get(): String = get(4) as String

    open var uploadDate: Instant
        set(value): Unit = set(5, value)
        get(): Instant = get(5) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /** Create a detached, initialised UserFileRecord */
    constructor(
        id: UUID,
        userId: UUID,
        fileContent: ByteArray,
        contentType: String,
        originalFilename: String,
        uploadDate: Instant
    ) : this() {
        this.id = id
        this.userId = userId
        this.fileContent = fileContent
        this.contentType = contentType
        this.originalFilename = originalFilename
        this.uploadDate = uploadDate
        resetChangedOnNotNull()
    }
}
