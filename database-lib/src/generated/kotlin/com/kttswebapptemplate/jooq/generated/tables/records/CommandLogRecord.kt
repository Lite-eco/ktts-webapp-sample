/*
 * This file is generated by jOOQ.
 */
package com.kttswebapptemplate.jooq.generated.tables.records

import com.kttswebapptemplate.jooq.generated.tables.CommandLogTable
import java.time.Instant
import java.util.UUID
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

/** This class is generated by jOOQ. */
@Suppress("UNCHECKED_CAST")
open class CommandLogRecord private constructor() :
    UpdatableRecordImpl<CommandLogRecord>(CommandLogTable.COMMAND_LOG) {

    open var id: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open var userId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var affectedUserId: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    open var deploymentLogId: UUID
        set(value): Unit = set(3, value)
        get(): UUID = get(3) as UUID

    open var commandClass: String
        set(value): Unit = set(4, value)
        get(): String = get(4) as String

    open var jsonCommand: String
        set(value): Unit = set(5, value)
        get(): String = get(5) as String

    open var ip: String
        set(value): Unit = set(6, value)
        get(): String = get(6) as String

    open var userSessionId: UUID?
        set(value): Unit = set(7, value)
        get(): UUID? = get(7) as UUID?

    open var idsLog: String
        set(value): Unit = set(8, value)
        get(): String = get(8) as String

    open var jsonResult: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var exceptionStackTrace: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var startDate: Instant
        set(value): Unit = set(11, value)
        get(): Instant = get(11) as Instant

    open var endDate: Instant
        set(value): Unit = set(12, value)
        get(): Instant = get(12) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /** Create a detached, initialised CommandLogRecord */
    constructor(
        id: UUID,
        userId: UUID? = null,
        affectedUserId: UUID? = null,
        deploymentLogId: UUID,
        commandClass: String,
        jsonCommand: String,
        ip: String,
        userSessionId: UUID? = null,
        idsLog: String,
        jsonResult: String? = null,
        exceptionStackTrace: String? = null,
        startDate: Instant,
        endDate: Instant
    ) : this() {
        this.id = id
        this.userId = userId
        this.affectedUserId = affectedUserId
        this.deploymentLogId = deploymentLogId
        this.commandClass = commandClass
        this.jsonCommand = jsonCommand
        this.ip = ip
        this.userSessionId = userSessionId
        this.idsLog = idsLog
        this.jsonResult = jsonResult
        this.exceptionStackTrace = exceptionStackTrace
        this.startDate = startDate
        this.endDate = endDate
        resetChangedOnNotNull()
    }
}
