/*
 * This file is generated by jOOQ.
 */
package com.kttswebapptemplate.jooq.generated.tables.records

import com.kttswebapptemplate.jooq.generated.tables.DeploymentLogTable
import java.time.Instant
import java.util.UUID
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

/** This class is generated by jOOQ. */
@Suppress("UNCHECKED_CAST")
open class DeploymentLogRecord private constructor() :
    UpdatableRecordImpl<DeploymentLogRecord>(DeploymentLogTable.DEPLOYMENT_LOG) {

    open var id: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open var buildVersion: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var systemZoneId: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var startupDate: Instant
        set(value): Unit = set(3, value)
        get(): Instant = get(3) as Instant

    open var shutdownDate: Instant?
        set(value): Unit = set(4, value)
        get(): Instant? = get(4) as Instant?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /** Create a detached, initialised DeploymentLogRecord */
    constructor(
        id: UUID,
        buildVersion: String,
        systemZoneId: String,
        startupDate: Instant,
        shutdownDate: Instant? = null
    ) : this() {
        this.id = id
        this.buildVersion = buildVersion
        this.systemZoneId = systemZoneId
        this.startupDate = startupDate
        this.shutdownDate = shutdownDate
        resetChangedOnNotNull()
    }
}
