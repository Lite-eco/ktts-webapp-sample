/*
 * This file is generated by jOOQ.
 */
package com.kttswebapptemplate.jooq.generated.tables.records

import com.kttswebapptemplate.jooq.generated.tables.SqlScriptLogTable
import java.time.Instant
import java.util.UUID
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

/** This class is generated by jOOQ. */
@Suppress("UNCHECKED_CAST")
open class SqlScriptLogRecord private constructor() :
    UpdatableRecordImpl<SqlScriptLogRecord>(SqlScriptLogTable.SQL_SCRIPT_LOG) {

    open var id: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open var script: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var comment: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var runDate: Instant?
        set(value): Unit = set(3, value)
        get(): Instant? = get(3) as Instant?

    open var insertDate: Instant
        set(value): Unit = set(4, value)
        get(): Instant = get(4) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /** Create a detached, initialised SqlScriptLogRecord */
    constructor(
        id: UUID,
        script: String,
        comment: String,
        runDate: Instant? = null,
        insertDate: Instant
    ) : this() {
        this.id = id
        this.script = script
        this.comment = comment
        this.runDate = runDate
        this.insertDate = insertDate
        resetChangedOnNotNull()
    }
}
