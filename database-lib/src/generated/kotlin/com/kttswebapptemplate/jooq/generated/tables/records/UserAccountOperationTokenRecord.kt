/*
 * This file is generated by jOOQ.
 */
package com.kttswebapptemplate.jooq.generated.tables.records

import com.kttswebapptemplate.jooq.generated.tables.UserAccountOperationTokenTable
import java.time.Instant
import java.util.UUID
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl

/** This class is generated by jOOQ. */
@Suppress("UNCHECKED_CAST")
open class UserAccountOperationTokenRecord private constructor() :
    UpdatableRecordImpl<UserAccountOperationTokenRecord>(
        UserAccountOperationTokenTable.USER_ACCOUNT_OPERATION_TOKEN),
    Record5<String?, String?, UUID?, UUID?, Instant?> {

    open var token: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var tokenType: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var userId: UUID
        set(value): Unit = set(2, value)
        get(): UUID = get(2) as UUID

    open var userMailLogId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var creationDate: Instant
        set(value): Unit = set(4, value)
        get(): Instant = get(4) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<String?, String?, UUID?, UUID?, Instant?> =
        super.fieldsRow() as Row5<String?, String?, UUID?, UUID?, Instant?>

    override fun valuesRow(): Row5<String?, String?, UUID?, UUID?, Instant?> =
        super.valuesRow() as Row5<String?, String?, UUID?, UUID?, Instant?>

    override fun field1(): Field<String?> =
        UserAccountOperationTokenTable.USER_ACCOUNT_OPERATION_TOKEN.TOKEN

    override fun field2(): Field<String?> =
        UserAccountOperationTokenTable.USER_ACCOUNT_OPERATION_TOKEN.TOKEN_TYPE

    override fun field3(): Field<UUID?> =
        UserAccountOperationTokenTable.USER_ACCOUNT_OPERATION_TOKEN.USER_ID

    override fun field4(): Field<UUID?> =
        UserAccountOperationTokenTable.USER_ACCOUNT_OPERATION_TOKEN.USER_MAIL_LOG_ID

    override fun field5(): Field<Instant?> =
        UserAccountOperationTokenTable.USER_ACCOUNT_OPERATION_TOKEN.CREATION_DATE

    override fun component1(): String = token

    override fun component2(): String = tokenType

    override fun component3(): UUID = userId

    override fun component4(): UUID? = userMailLogId

    override fun component5(): Instant = creationDate

    override fun value1(): String = token

    override fun value2(): String = tokenType

    override fun value3(): UUID = userId

    override fun value4(): UUID? = userMailLogId

    override fun value5(): Instant = creationDate

    override fun value1(value: String?): UserAccountOperationTokenRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): UserAccountOperationTokenRecord {
        set(1, value)
        return this
    }

    override fun value3(value: UUID?): UserAccountOperationTokenRecord {
        set(2, value)
        return this
    }

    override fun value4(value: UUID?): UserAccountOperationTokenRecord {
        set(3, value)
        return this
    }

    override fun value5(value: Instant?): UserAccountOperationTokenRecord {
        set(4, value)
        return this
    }

    override fun values(
        value1: String?,
        value2: String?,
        value3: UUID?,
        value4: UUID?,
        value5: Instant?
    ): UserAccountOperationTokenRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /** Create a detached, initialised UserAccountOperationTokenRecord */
    constructor(
        token: String,
        tokenType: String,
        userId: UUID,
        userMailLogId: UUID? = null,
        creationDate: Instant
    ) : this() {
        this.token = token
        this.tokenType = tokenType
        this.userId = userId
        this.userMailLogId = userMailLogId
        this.creationDate = creationDate
        resetChangedOnNotNull()
    }
}
