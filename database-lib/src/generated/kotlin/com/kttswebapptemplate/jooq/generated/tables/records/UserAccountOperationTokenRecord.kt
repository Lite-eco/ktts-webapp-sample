/*
 * This file is generated by jOOQ.
 */
package com.kttswebapptemplate.jooq.generated.tables.records

import com.kttswebapptemplate.jooq.generated.tables.UserAccountOperationTokenTable
import java.time.Instant
import java.util.UUID
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

/** This class is generated by jOOQ. */
@Suppress("UNCHECKED_CAST")
open class UserAccountOperationTokenRecord private constructor() :
    UpdatableRecordImpl<UserAccountOperationTokenRecord>(
        UserAccountOperationTokenTable.USER_ACCOUNT_OPERATION_TOKEN) {

    open var token: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var tokenType: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var userId: UUID
        set(value): Unit = set(2, value)
        get(): UUID = get(2) as UUID

    open var userMailLogId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var creationDate: Instant
        set(value): Unit = set(4, value)
        get(): Instant = get(4) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /** Create a detached, initialised UserAccountOperationTokenRecord */
    constructor(
        token: String,
        tokenType: String,
        userId: UUID,
        userMailLogId: UUID? = null,
        creationDate: Instant
    ) : this() {
        this.token = token
        this.tokenType = tokenType
        this.userId = userId
        this.userMailLogId = userMailLogId
        this.creationDate = creationDate
        resetChangedOnNotNull()
    }
}
