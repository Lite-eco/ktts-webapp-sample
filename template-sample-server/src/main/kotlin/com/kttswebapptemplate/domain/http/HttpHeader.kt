package com.kttswebapptemplate.domain.http

// from org.springframework.http.HttpHeaders
data class HttpHeader(val header: String) {
    companion object {
        // common extensions
        // standard headers
        val Accept = HttpHeader("Accept")
        val AcceptCharset = HttpHeader("Accept-Charset")
        val AcceptEncoding = HttpHeader("Accept-Encoding")
        val AcceptLanguage = HttpHeader("Accept-Language")
        val AcceptPatch = HttpHeader("Accept-Patch")
        val AcceptRanges = HttpHeader("Accept-Ranges")
        val AccessControlAllowCredentials = HttpHeader("Access-Control-Allow-Credentials")
        val AccessControlAllowHeaders = HttpHeader("Access-Control-Allow-Headers")
        val AccessControlAllowMethods = HttpHeader("Access-Control-Allow-Methods")
        val AccessControlAllowOrigin = HttpHeader("Access-Control-Allow-Origin")
        val AccessControlExposeHeaders = HttpHeader("Access-Control-Expose-Headers")
        val AccessControlMaxAge = HttpHeader("Access-Control-Max-Age")
        val AccessControlRequestHeaders = HttpHeader("Access-Control-Request-Headers")
        val AccessControlRequestMethod = HttpHeader("Access-Control-Request-Method")
        val Age = HttpHeader("Age")
        val Allow = HttpHeader("Allow")
        val Authorization = HttpHeader("Authorization")
        val CacheControl = HttpHeader("Cache-Control")
        val Connection = HttpHeader("Connection")
        val ContentEncoding = HttpHeader("Content-Encoding")
        val ContentDisposition = HttpHeader("Content-Disposition")
        val ContentLanguage = HttpHeader("Content-Language")
        val ContentLength = HttpHeader("Content-Length")
        val ContentLocation = HttpHeader("Content-Location")
        val ContentRange = HttpHeader("Content-Range")
        val ContentType = HttpHeader("Content-Type")
        val Cookie = HttpHeader("Cookie")
        val Date = HttpHeader("Date")
        val Etag = HttpHeader("ETag")
        val Expect = HttpHeader("Expect")
        val Expires = HttpHeader("Expires")
        val From = HttpHeader("From")
        val Host = HttpHeader("Host")
        val IfMatch = HttpHeader("If-Match")
        val IfModifiedSince = HttpHeader("If-Modified-Since")
        val IfNoneMatch = HttpHeader("If-None-Match")
        val IfRange = HttpHeader("If-Range")
        val IfUnmodifiedSince = HttpHeader("If-Unmodified-Since")
        val LastModified = HttpHeader("Last-Modified")
        val Link = HttpHeader("Link")
        val Location = HttpHeader("Location")
        val MaxForwards = HttpHeader("Max-Forwards")
        val Origin = HttpHeader("Origin")
        val Pragma = HttpHeader("Pragma")
        val ProxyAuthenticate = HttpHeader("Proxy-Authenticate")
        val ProxyAuthorization = HttpHeader("Proxy-Authorization")
        val Range = HttpHeader("Range")
        val Referer = HttpHeader("Referer")
        val RetryAfter = HttpHeader("Retry-After")
        val Server = HttpHeader("Server")
        val SetCookie = HttpHeader("Set-Cookie")
        val SetCookie2 = HttpHeader("Set-Cookie2")
        val Te = HttpHeader("TE")
        val Trailer = HttpHeader("Trailer")
        val TransferEncoding = HttpHeader("Transfer-Encoding")
        val Upgrade = HttpHeader("Upgrade")
        val UserAgent = HttpHeader("User-Agent")
        val Vary = HttpHeader("Vary")
        val Via = HttpHeader("Via")
        val Warning = HttpHeader("Warning")
        val WwwAuthenticate = HttpHeader("WWW-Authenticate")
    }
}
